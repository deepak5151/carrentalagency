{"version":3,"sources":["NavigationBar.js","DisplayCars.js","Details.js","ContactMe.js","DisplayForm.js","CurrentBookings.js","App.js","index.js"],"names":["NavigationBar","Navbar","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","as","to","Component","withRouter","DisplayCars","CardColumns","Data","map","item","i","Card","Img","src","imgpath","alt","height","Title","carname","Subtitle","rpd","Button","block","carnumber","status","disabled","Details","state","detaill","currentid","this","props","match","params","push","Header","ListGroup","ListGroupItem","model","seatingcapacity","color","average","fuel","vehiclenumber","ContactMe","style","fontFamily","fontWeight","class","href","title","target","DisplayForm","isRedirect","currentBookings","mindate","Date","maxdate","setDate","getDate","schema","yup","fullName","required","Email","email","Contact","matches","max","BookingDate","min","ReturningDate","when","validationSchema","onSubmit","values","alert","BookingData","setState","initialValues","handleSubmit","handleChange","handleBlur","touched","errors","Form","noValidate","Group","controlId","Label","Control","type","name","placeholder","value","onChange","onBlur","isInvalid","Feedback","InputGroup","Prepend","Text","aria-describedby","width","CurrentBookings","Table","responsive","striped","bordered","hover","BookingsData","Booked","App","path","exact","component","render","ReactDom","document","getElementById"],"mappings":"wRAIMA,E,uKAEE,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QAClC,kBAACH,EAAA,EAAOI,MAAR,0BACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,gBACX,kBAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,cAAvB,cACA,kBAACJ,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,aAAvB,oBACA,kBAACJ,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,cAAvB,qB,GAVIC,aAkBbC,cAAWhB,G,mCCjBpBiB,E,uKAGE,OACI,yBAAKN,UAAU,kBACX,kBAACO,EAAA,EAAD,KAEQC,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACL,kBAACC,EAAA,EAAD,CAAMZ,UAAU,QACZ,kBAACY,EAAA,EAAKC,IAAN,CAAUb,UAAU,OAAOc,IAAKJ,EAAKK,QAASC,IAAI,iBAAiBC,OAAO,UAC1E,kBAACL,EAAA,EAAKM,MAAN,CAAYlB,UAAU,eAAeU,EAAKS,SAC1C,kBAACP,EAAA,EAAKQ,SAAN,CAAepB,UAAU,oBAAzB,MAAgDU,EAAKW,IAArD,QACA,kBAACC,EAAA,EAAD,CAAQ7B,QAAQ,UAAU8B,OAAK,EAACrB,GAAID,IAAME,GAAE,mBAAcO,EAAKc,YAA/D,WACCd,EAAKe,OACF,kBAACH,EAAA,EAAD,CAAQ7B,QAAQ,UAAUS,GAAID,IAAME,GAAE,wBAAmBO,EAAKc,WAAaD,OAAK,GAAhF,YACA,kBAACD,EAAA,EAAD,CAAQ7B,QAAQ,SAASiC,UAAQ,EAACH,OAAK,GAAvC,2B,GAfVnB,aA2BXC,cAAWC,G,iBCiBXqB,E,4MA3CXC,MAAQ,CACJC,QAAS,I,uDAEH,IAAD,OACCC,EAAYC,KAAKC,MAAMC,MAAMC,OAAOpC,GAC1CU,EAAKC,KAAI,SAACC,GAIN,OAHIA,EAAKc,YAAcM,GACnB,EAAKF,MAAMC,QAAQM,KAAKzB,IAErB,KANN,IAQGmB,EAAYE,KAAKH,MAAjBC,QACR,OACI,6BACKA,EAAQpB,KAAI,SAACC,GAAD,OACT,yBAAKV,UAAU,2BACX,kBAACY,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAUC,IAAKJ,EAAKK,QAASC,IAAI,iBAAiBC,OAAO,UACzD,kBAACL,EAAA,EAAKwB,OAAN,CAAapC,UAAU,eACnB,kBAACY,EAAA,EAAKM,MAAN,KAAaR,EAAKS,SAClB,kBAACP,EAAA,EAAKQ,SAAN,oBAA4BV,EAAKW,IAAjC,aAEJ,kBAACgB,EAAA,EAAD,CAAWrC,UAAU,cAAcP,QAAQ,SACvC,kBAAC6C,EAAA,EAAD,KAAe,uCAAgB5B,EAAK6B,OACpC,kBAACD,EAAA,EAAD,KAAe,kDAA2B5B,EAAK8B,iBAC/C,kBAACF,EAAA,EAAD,KAAe,uCAAgB5B,EAAK+B,OACpC,kBAACH,EAAA,EAAD,KAAe,yCAAkB5B,EAAKgC,QAAtC,gBACA,kBAACJ,EAAA,EAAD,KAAe,2CAAoB5B,EAAKiC,MACxC,kBAACL,EAAA,EAAD,KAAe,gDAAyB5B,EAAKkC,gBAEhDlC,EAAKe,OACF,kBAACH,EAAA,EAAD,CAAQ7B,QAAQ,UAAUS,GAAID,IAAME,GAAE,wBAAmBO,EAAKc,WAAaD,OAAK,GAAhF,YACA,kBAACD,EAAA,EAAD,CAAQ7B,QAAQ,SAASiC,UAAQ,EAACH,OAAK,GAAvC,iBAEJ,kBAACD,EAAA,EAAD,CAAQ7B,QAAQ,UAAUS,GAAID,IAAME,GAAG,aAAaoB,OAAK,GAAzD,6B,GAnCNnB,aCFDyC,E,uKAEb,OACI,yBAAK7C,UAAU,qBACX,0CACA,wBAAI8C,MAAO,CAAEC,WAAY,UAAWC,WAAY,QAAhD,iBACA,0CAAmB,6BACnB,wBAAIC,MAAM,uBACN,4BACI,uBAAGC,KAAK,2BAA2BC,MAAM,WAAWC,OAAO,WACvD,uBAAGH,MAAM,yBADb,UAEA,uBAAGC,KAAK,8CAA8CC,MAAM,WAAWC,OAAO,WAC1E,uBAAGH,MAAM,gCADb,UAEA,uBAAGC,KAAK,4CAA4CC,MAAM,YAAYC,OAAO,WACzE,uBAAGH,MAAM,0BADb,UAEA,uBAAGC,KAAK,8EAA8EC,MAAM,UAAUC,OAAO,WACzG,uBAAGH,MAAM,gC,GAhBE7C,a,2CCMlBiD,E,4MACjBzB,MAAQ,CACJ0B,YAAY,EACZC,gBAAiB,I,uDAEX,IAAD,OAGDC,EAAU,IAAIC,KACdC,EAAU,IAAID,KAClBD,EAAQG,QAAQH,EAAQI,UAAY,GACpCF,EAAQC,QAAQD,EAAQE,UAAY,GACpC,IAAMC,EAASC,IAAW,CACtBC,SAAUD,MAAaE,SAAS,qBAChCC,MAAOH,MAAaI,QAAQF,WAC5BG,QAASL,MAAaE,SAAS,mCAAmCI,QARvD,sFAQyE,6BAC/EC,IAAI,GAAI,6BACbC,YAAaR,MAAWE,SAAS,2BAA2BO,IAAIf,EAAS,+CACpEa,IAAIX,EAAS,iDAClBc,cAAeV,MAAWE,SAAS,2BAC9BS,KAAK,eACF,SAACH,EAAaR,GAAd,OAAsBQ,GAAeR,EAAIS,IAAID,EAAa,oDAItE,OAAmB,IADAvC,KAAKH,MAAM0B,WAEnB,kBAAC,IAAD,CAAUnD,GAAG,eAGpB,yBAAKH,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBACX,kBAACsB,EAAA,EAAD,CAAQpB,GAAID,IAAME,GAAG,aAAaV,QAAQ,SAAS,uBAAGO,UAAU,qBAAhE,sBAEJ,yBAAKA,UAAU,6BACX,2EACA,wEAEJ,kBAAC,IAAD,CACI0E,iBAAkBb,EAClBc,SAAU,SAACC,GACPC,MAAM,6HACNrE,EAAKC,KAAI,SAACC,GACN,IAAMoB,EAAY,EAAKE,MAAMC,MAAMC,OAAOpC,GAe1C,OAdIY,EAAKc,YAAcM,IACnBgD,EAAY3C,KACR,CACI,SAAYyC,EAAOb,SACnB,UAAarD,EAAKc,UAClB,QAAWd,EAAKS,QAChB,OAAUyD,EAAON,YACjB,cAAiBM,EAAOJ,cACxB,QAAU,EACV,cAAiB9D,EAAKkC,gBAG9BlC,EAAKe,QAAS,IAEX,KAEX,EAAKsD,SAAS,CACVzB,YAAY,KAIpB0B,cAAe,CACXjB,SAAU,GACVE,MAAO,GACPE,QAAS,GACTG,YAAa,GACbE,cAAe,MAGlB,gBACGS,EADH,EACGA,aACAC,EAFH,EAEGA,aACAC,EAHH,EAGGA,WACAP,EAJH,EAIGA,OACAQ,EALH,EAKGA,QACAC,EANH,EAMGA,OANH,OAQO,kBAACC,EAAA,EAAD,CAAMC,YAAU,EAACZ,SAAUM,EAAcjF,UAAU,sBAC/C,kBAACsF,EAAA,EAAKE,MAAN,CAAYC,UAAU,aAClB,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,OACLC,KAAK,WACLC,YAAY,kBACZC,MAAOnB,EAAOb,SACdiC,SAAUd,EACVe,OAAQd,EACRe,UAAWd,EAAQrB,UAAYsB,EAAOtB,WAE1C,kBAACuB,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,WAAWP,EAAOtB,WAGlD,kBAACuB,EAAA,EAAKE,MAAN,CAAYC,UAAU,iBAClB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACU,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWC,QAAZ,KACI,kBAACD,EAAA,EAAWE,KAAZ,CAAiBxG,GAAG,qBAApB,MAEJ,kBAACwF,EAAA,EAAKK,QAAN,CACIC,KAAK,QACLE,YAAY,QACZS,mBAAiB,oBACjBV,KAAK,QACLE,MAAOnB,EAAOX,MACdgC,OAAQd,EACRa,SAAUd,EACVgB,UAAWd,EAAQnB,OAASoB,EAAOpB,QAEvC,kBAACqB,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,WACvBP,EAAOpB,SAIpB,kBAACqB,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAClB,kBAACH,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,SACLE,YAAY,oBACZD,KAAK,UACLE,MAAOnB,EAAOT,QACd6B,SAAUd,EACVe,OAAQd,EACRe,UAAWd,EAAQjB,SAAWkB,EAAOlB,UAEzC,kBAACmB,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,WACvBP,EAAOlB,UAIhB,kBAACmB,EAAA,EAAKE,MAAN,CAAYC,UAAU,YAClB,kBAACH,EAAA,EAAKI,MAAN,+BACA,kBAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,OACLE,YAAY,eACZvB,IAAK,IAAId,KACToC,KAAK,cACLE,MAAOnB,EAAON,YACd0B,SAAUd,EACVe,OAAQd,EACRe,UAAWd,EAAQd,aAAee,EAAOf,cAE7C,kBAACgB,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,WACvBP,EAAOf,cAIhB,kBAACgB,EAAA,EAAKE,MAAN,CAAYC,UAAU,YAClB,kBAACH,EAAA,EAAKI,MAAN,uBACA,kBAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,OACLE,YAAY,iBACZD,KAAK,gBACLE,MAAOnB,EAAOJ,cACdwB,SAAUd,EACVe,OAAQd,EACRe,UAAWd,EAAQZ,eAAiBa,EAAOb,gBAE/C,kBAACc,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,WACvBP,EAAOb,gBAGhB,kBAAClD,EAAA,EAAD,CAAQsE,KAAK,SAASY,MAAM,QAAQ/G,QAAQ,UAAUO,UAAU,kBAAhE,oB,GArKKI,a,SCLpBqG,E,uKAEb,OACI,kBAACC,EAAA,EAAD,CAAO1G,UAAU,cAAc2G,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACrH,QAAQ,SACrE,+BACI,4BACI,2CACA,0CACA,8CACA,4CAAiB,gDACjB,8CAAmB,kDAG3B,+BACKsH,EAAatG,KAAI,SAACC,GAAD,OACd,4BACI,4BAAKA,EAAKqD,UACV,4BAAKrD,EAAKS,SACV,4BAAKT,EAAKkC,eACV,4BAAKlC,EAAKsG,QACV,4BAAKtG,EAAK8D,yB,GApBOpE,aCsB9B6G,E,uKAfP,OAEI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW9G,IACjC,kBAAC,IAAD,CAAO4G,KAAK,aAAaE,UAAW9G,IACpC,kBAAC,IAAD,CAAO4G,KAAM,eAAgBG,OAAQ,SAACrF,GAAD,OAAW,kBAAC,EAAYA,MAC7D,kBAAC,IAAD,CAAOkF,KAAK,aAAaE,UAAWvE,IACpC,kBAAC,IAAD,CAAOqE,KAAM,oBAAqBE,UAAW/D,IAC7C,kBAAC,IAAD,CAAO6D,KAAK,YAAYE,UAAWX,S,GAXjCrG,a,qBCFlBkH,IAASD,OACL,kBAAC,EAAD,MAASE,SAASC,eAAe,U","file":"static/js/main.dcf680f5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nclass NavigationBar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand >Car Rental Agency</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto mr-4\">\r\n                        <Nav.Link as={Link} to='/dashboard'> Dashboard</Nav.Link>\r\n                        <Nav.Link as={Link} to='/bookings'>Current Bookings</Nav.Link>\r\n                        <Nav.Link as={Link} to='/contactme'>Contact Me</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavigationBar)\r\n","import React, { Component } from 'react'\r\nimport Data from './Data.json'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { CardColumns, Card, Button } from 'react-bootstrap'\r\n\r\nclass DisplayCars extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container my-4\">\r\n                <CardColumns>\r\n                    {\r\n                        Data.map((item, i) => (\r\n                            <Card className=\"pb-4\">\r\n                                <Card.Img className=\"mb-4\" src={item.imgpath} alt=\"No Image Found\" height=\"250px\" />\r\n                                <Card.Title className=\"text-center\">{item.carname}</Card.Title>\r\n                                <Card.Subtitle className=\"text-center mb-2\">Rs.{item.rpd}/day</Card.Subtitle>\r\n                                <Button variant=\"primary\" block as={Link} to={`/details/${item.carnumber}`}>Details</Button>\r\n                                {item.status ?\r\n                                    <Button variant=\"success\" as={Link} to={`/enterdetails/${item.carnumber}`} block>Book Car</Button> :\r\n                                    <Button variant=\"danger\" disabled block>Not Available</Button>\r\n                                }\r\n                            </Card>\r\n\r\n                        ))\r\n                    }\r\n                </CardColumns>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DisplayCars);\r\n","import React, { Component } from 'react'\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Data from './Data.json'\r\n\r\nclass Details extends Component {\r\n    state = {\r\n        detaill: []\r\n    }\r\n    render() {\r\n        const currentid = this.props.match.params.id;\r\n        Data.map((item) => {\r\n            if (item.carnumber === currentid) {\r\n                this.state.detaill.push(item)\r\n            }\r\n            return true\r\n        })\r\n        const { detaill } = this.state\r\n        return (\r\n            <div>\r\n                {detaill.map((item) => (\r\n                    <div className=\"container col-md-4 my-4\">\r\n                        <Card>\r\n                            <Card.Img src={item.imgpath} alt=\"No Image Found\" height=\"250px\" />\r\n                            <Card.Header className=\"text-center\">\r\n                                <Card.Title>{item.carname}</Card.Title>\r\n                                <Card.Subtitle>Only for Rs.{item.rpd} per day</Card.Subtitle>\r\n                            </Card.Header>\r\n                            <ListGroup className=\"text-center\" variant=\"flush\">\r\n                                <ListGroupItem><b>Model : </b>{item.model}</ListGroupItem>\r\n                                <ListGroupItem><b>Seating Capacity : </b>{item.seatingcapacity}</ListGroupItem>\r\n                                <ListGroupItem><b>Color : </b>{item.color}</ListGroupItem>\r\n                                <ListGroupItem><b>Average : </b>{item.average}km per litre</ListGroupItem>\r\n                                <ListGroupItem><b>Fuel Type : </b>{item.fuel}</ListGroupItem>\r\n                                <ListGroupItem><b>Vehicle Number : </b>{item.vehiclenumber}</ListGroupItem>\r\n                            </ListGroup>\r\n                            {item.status ?\r\n                                <Button variant=\"success\" as={Link} to={`/enterdetails/${item.carnumber}`} block>Book Car</Button> :\r\n                                <Button variant=\"danger\" disabled block>Not Available</Button>\r\n                            }\r\n                            <Button variant=\"primary\" as={Link} to=\"/dashboard\" block>Go to Dashboard</Button>\r\n                        </Card>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class ContactMe extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mydiv text-center\">\r\n                <h4>Created by</h4>\r\n                <h1 style={{ fontFamily: \"cursive\", fontWeight: \"600\" }}>Deepak Kapoor</h1>\r\n                <h6>9646445151</h6><br />\r\n                <ul class=\"contact text-center\">\r\n                    <li>\r\n                        <a href=\"mailto:nk93555@gmail.com\" title=\"Email Me\" target=\"__blank\">\r\n                            <i class=\"fa fa-envelope fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.facebook.com/deepak.kapoor.1905\" title=\"Facebook\" target=\"__blank\">\r\n                            <i class=\"fa fa-facebook-square fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.instagram.com/deepak._kapoor/\" title=\"Instagram\" target=\"__blank\">\r\n                            <i class=\"fa fa-instagram fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.youtube.com/channel/UCw_0N6rXyzcH-gpYsPA1Q9Q?view_as=subscriber\" title=\"Youtube\" target=\"__blank\">\r\n                            <i class=\"fa fa-youtube fa-2x\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { Redirect } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport Data from './Data.json'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, InputGroup, Button, } from 'react-bootstrap'\r\nimport BookingData from './BookingsData.json'\r\n\r\nexport default class DisplayForm extends Component {\r\n    state = {\r\n        isRedirect: false,\r\n        currentBookings: []\r\n    }\r\n    render() {\r\n\r\n        var phoneNum = /^\\s*(?:\\+?(\\d{1,3}))?[- (]*(\\d{3})[- )]*(\\d{3})[- ]*(\\d{4})(?: *[x/#]{1}(\\d+))?\\s*$/\r\n        var mindate = new Date();\r\n        var maxdate = new Date();\r\n        mindate.setDate(mindate.getDate() - 1)\r\n        maxdate.setDate(maxdate.getDate() + 7);\r\n        const schema = yup.object({\r\n            fullName: yup.string().required(\"Please Enter Name\"),\r\n            Email: yup.string().email().required(),\r\n            Contact: yup.string().required(\"Please Enter Valid Phone Number\").matches(phoneNum, 'Phone number is not valid')\r\n                .max(10, \"Maximum 10 digits allowed\"),\r\n            BookingDate: yup.date().required(\"Please Enter Valid Date\").min(mindate, \"Booking Date must be later than or on today\")\r\n                .max(maxdate, \"You can only book a date in the coming 7 days\"),\r\n            ReturningDate: yup.date().required(\"Please Enter Valid Date\")\r\n                .when(\"BookingDate\",\r\n                    (BookingDate, yup) => BookingDate && yup.min(BookingDate, \"Return Date must be later than Booking Date\"))\r\n        });\r\n\r\n        const isRedirect = this.state.isRedirect;\r\n        if (isRedirect === true) {\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"mb-4 row\">\r\n                    <div className=\"mt-4 col-md-2\">\r\n                        <Button as={Link} to='/dashboard' variant=\"light\" ><i className=\"fa fa-angle-left\"></i>- Go to Dashboard</Button>\r\n                    </div>\r\n                    <div className=\"text-center my-4 col-md-8\">\r\n                        <h1>You are just one step away to book your Car</h1>\r\n                        <p>Enter following details to book your car</p>\r\n                    </div>\r\n                    <Formik\r\n                        validationSchema={schema}\r\n                        onSubmit={(values) => {\r\n                            alert(\"Thank You for booking car with Car Rental Agency.\\n Enjoy your Ride.\\n View your booking in the Current Bookings Section \")\r\n                            Data.map((item) => {\r\n                                const currentid = this.props.match.params.id;\r\n                                if (item.carnumber === currentid) {\r\n                                    BookingData.push(\r\n                                        {\r\n                                            \"fullName\": values.fullName,\r\n                                            \"carnumber\": item.carnumber,\r\n                                            \"carname\": item.carname,\r\n                                            \"Booked\": values.BookingDate,\r\n                                            \"ReturningDate\": values.ReturningDate,\r\n                                            \"status\": false,\r\n                                            \"vehiclenumber\": item.vehiclenumber,\r\n                                        }\r\n                                    )\r\n                                    item.status = false\r\n                                }\r\n                                return true\r\n                            })\r\n                            this.setState({\r\n                                isRedirect: true\r\n                            })\r\n                        }\r\n                        }\r\n                        initialValues={{\r\n                            fullName: \"\",\r\n                            Email: \"\",\r\n                            Contact: \"\",\r\n                            BookingDate: \"\",\r\n                            ReturningDate: \"\"\r\n                        }}\r\n                    >\r\n                        {({\r\n                            handleSubmit,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            values,\r\n                            touched,\r\n                            errors,\r\n                        }) => (\r\n                                <Form noValidate onSubmit={handleSubmit} className=\"container col-md-4\">\r\n                                    <Form.Group controlId=\"inputname\">\r\n                                        <Form.Label>Full name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"fullName\"\r\n                                            placeholder=\"Enter Full Name\"\r\n                                            value={values.fullName}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            isInvalid={touched.fullName && errors.fullName}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.fullName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"inputusername\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                                type=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                name=\"Email\"\r\n                                                value={values.Email}\r\n                                                onBlur={handleBlur}\r\n                                                onChange={handleChange}\r\n                                                isInvalid={touched.Email && errors.Email}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors.Email}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"inputcountry\">\r\n                                        <Form.Label>Contact Number</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            placeholder=\"Don't Include +91\"\r\n                                            name=\"Contact\"\r\n                                            value={values.Contact}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            isInvalid={touched.Contact && errors.Contact}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.Contact}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"inputdob\">\r\n                                        <Form.Label>When you want to Book?</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"Date\"\r\n                                            placeholder=\"Booking Date\"\r\n                                            min={new Date()}\r\n                                            name=\"BookingDate\"\r\n                                            value={values.BookingDate}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            isInvalid={touched.BookingDate && errors.BookingDate}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.BookingDate}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"inputdob\">\r\n                                        <Form.Label>Returning Date</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"Date\"\r\n                                            placeholder=\"Returning Date\"\r\n                                            name=\"ReturningDate\"\r\n                                            value={values.ReturningDate}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            isInvalid={touched.ReturningDate && errors.ReturningDate}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.ReturningDate}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" width=\"100px\" variant=\"success\" className=\"d-flex mx-auto\">SignUp</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div >\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport BookingsData from './BookingsData.json'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nexport default class CurrentBookings extends Component {\r\n    render() {\r\n        return (\r\n            <Table className=\"text-center\" responsive striped bordered hover variant=\"light\">\r\n                <thead >\r\n                    <tr>\r\n                        <th>Person Name</th>\r\n                        <th>Car Booked</th>\r\n                        <th>Vehicle Number</th>\r\n                        <th>Booking Date <small>(YYYY/MM/DD)</small></th>\r\n                        <th>Returning Date <small>(YYYY/MM/DD)</small></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {BookingsData.map((item) => (\r\n                        <tr>\r\n                            <td>{item.fullName}</td>\r\n                            <td>{item.carname}</td>\r\n                            <td>{item.vehiclenumber}</td>\r\n                            <td>{item.Booked}</td>\r\n                            <td>{item.ReturningDate}</td>\r\n                        </tr>\r\n\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NavigationBar from './NavigationBar'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport DisplayCars from './DisplayCars'\r\nimport Details from './Details.js'\r\nimport ContactMe from './ContactMe'\r\nimport DisplayForm from './DisplayForm'\r\nimport CurrentBookings from './CurrentBookings'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <Router>\r\n                <NavigationBar />\r\n                <Route path='/' exact component={DisplayCars} />\r\n                <Route path='/dashboard' component={DisplayCars} />\r\n                <Route path={\"/details/:id\"} render={(props) => <Details {...props} />} />\r\n                <Route path='/contactme' component={ContactMe} />\r\n                <Route path={\"/enterdetails/:id\"} component={DisplayForm} />\r\n                <Route path='/bookings' component={CurrentBookings} />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './caragency.css';\r\n\r\nReactDom.render(\r\n    <App />, document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}